on:
  push:
    paths:
      - 'version/yt-dlp.txt'

name: yt-dlp
jobs:
  build:
    runs-on: ubuntu-22.04
    steps:
      
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup variables
        run: |
          echo "FFMPEG=$(wget -qO- https://api.github.com/repos/BtbN/FFmpeg-Builds/tags | grep 'name' | cut -d\" -f4 | head -1)" >> $GITHUB_ENV
          echo "YOUDL=$(wget -qO- https://api.github.com/repos/yt-dlp/yt-dlp/tags | grep 'name' | cut -d\" -f4 | head -1)" >> $GITHUB_ENV
          echo "VERSION=$(cat "version/yt-dlp.txt" | head -1 | tr -d [:space:])" >> $GITHUB_ENV
        shell: bash

      - name: Start build
        run: |
          mkdir -p ffmpeg
          pushd ffmpeg || exit 1
          wget -qO- https://api.github.com/repos/BtbN/FFmpeg-Builds/releases/tags/${FFMPEG} | jq ".assets[] | {browser_download_url}" -c | jq .browser_download_url -r | grep -E ".ffmpeg-n.*.-gpl-[[:digit:]].[[:digit:]].zip" | sort -r | head -1 | wget -O ffmpeg.zip -i -
          unzip ffmpeg.zip
          mv ffmpeg-*/bin/*.exe .
          popd || exit 1
          mkdir -p release
          pushd release || exit 1
          wget -O yt-dlp.exe https://github.com/yt-dlp/yt-dlp/releases/download/${{ env.YOUDL }}/yt-dlp.exe
          ARIA2=$(wget -qO- https://api.github.com/repos/aria2/aria2/releases/latest | jq ".assets[] | {name}" -c | jq .name -r | grep "win-64bit" | sed "s/.zip//g")
          wget -qO- https://api.github.com/repos/aria2/aria2/releases/latest | jq ".assets[] | {browser_download_url}" -c | jq .browser_download_url -r | grep "win-64bit" | wget -O aria2.zip -q -i -
          unzip -qq aria2.zip && mv ${ARIA2}/aria2c.exe .
          rm -rf ${ARIA2} aria2.zip
          cp -r ../ffmpeg/*.exe .
          zip -9 -r yt-dlp.zip *
          popd || exit 1

      - name: Release
        uses: ncipollo/release-action@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          name: ${{ env.VERSION }}
          tag: ${{ env.VERSION }}
          draft: false
          prerelease: false
          allowUpdates: true
          artifacts: |
            ./release/yt-dlp.zip
